name: Azure AST plugin release

on:
  push:
    tags:
      - "*"
  workflow_dispatch:

env:
  PUBLISHER: Checkmarx
  EXTENSION_ID: checkmarx-ast-azure-plugin

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2.3.4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2.4.1
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm install
      - run: sudo npm install -g tfx-cli

      - name: Authenticate with GitHub package registry
        run: echo "//npm.pkg.github.com/:_authToken=${{ secrets.GITHUB_TOKEN }}" > ~/.npmrc

      - name: Build step
        run: |
          npm install
          cd cxAstScan/
          npm install
      - run: npm run build

      - name: Set new version
        run: |
          RELEASE_VERSION=3.0.0
          echo "RELEASE_VERSION=3.0.0" >> $GITHUB_ENV
          echo "MAJOR_VERSION=$(echo $RELEASE_VERSION | cut -d. -f1)" >> $GITHUB_ENV
          echo "MINOR_VERSION=$(echo $RELEASE_VERSION | cut -d. -f2)" >> $GITHUB_ENV
          echo "PATCH_VERSION=$(echo $RELEASE_VERSION | cut -d. -f3)" >> $GITHUB_ENV

      - name: New version
        run: |
          echo "The new version RELEASE_VERSION is ${{ env.RELEASE_VERSION }}"

      - name: Set versions
        run: |
          sudo apt install jq
          jq ".version = \"${{ env.RELEASE_VERSION }}\"" ./vss-extension.json > ./vss-extension.json
          jq ".version = \"${{ env.RELEASE_VERSION }}\"" ./package.json > ./package.json
          jq ".version.Major = ${{ env.MAJOR_VERSION }}" ./CxASTScan/task.json > ./CxASTScan/task.json
          jq ".version.Minor = ${{ env.MINOR_VERSION }}" ./CxASTScan/task.json > ./CxASTScan/task.json
          jq ".version.Patch = ${{ env.PATCH_VERSION }}" ./CxASTScan/task.json > ./CxASTScan/task.json

      - name: Create extension
        run: tfx extension create --manifest-globs vss-extension.json

      - name : Cat
        if: ${{ github.event_name == 'workflow_dispatch' }}
        run: |
          cat ./vss-extension.json
          cat ./package.json
          cat ./CxASTScan/task.json

      - name:  Create Release
        if: ${{ github.event_name != 'workflow_dispatch' }}
        uses: actions/create-release@v1
        id: create_release
        with:
          release_name: CheckmarxAST-${{ env.RELEASE_VERSION }}
          tag_name: ${{ env.RELEASE_VERSION }}
          body: ${{steps.github_release.outputs.changelog}}
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: upload artifact
        if: ${{ github.event_name != 'workflow_dispatch' }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./${{ env.PUBLISHER }}.${{ env.EXTENSION_ID }}-${{ env.RELEASE_VERSION }}.vsix
          asset_name: ${{ env.PUBLISHER }}.${{ env.EXTENSION_ID }}-${{ env.RELEASE_VERSION }}.vsix
          asset_content_type: application/zip

      - name: Release to marketplance
        if: ${{ github.event_name != 'workflow_dispatch' }}
        run: tfx extension publish --vsix *.vsix --token ${{ secrets.AZURETOKEN }}
