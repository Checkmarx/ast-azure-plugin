name: Azure AST plugin release

on:
  push:
    tags:
      - "*"

env:
  PUBLISHER: CheckmarxASTBeta
  EXTENSION_ID: CheckmarxAST
  EXTENSION_NAME: 'Checkmarx AST Test'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm install
      - run: sudo npm install -g tfx-cli

      - name: Authenticate with GitHub package registry
        run: echo "//npm.pkg.github.com/:_authToken=${{ secrets.GITHUB_TOKEN }}" > ~/.npmrc

      - name: Build step
        run: |
          npm install
          cd cxAstScan/
          npm install
      - run: npm run build

      - name: Set new version
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: New version
        run: |
          echo "The new version RELEASE_VERSION is ${{ env.RELEASE_VERSION }}"

      - name: Set version
        uses: cschleiden/replace-tokens@v1
        with:
          files: '["**/*.json"]'
        env:
          VERSION: ${{ env.RELEASE_VERSION }}

      - name: Create extension
        run: tfx extension create --manifest-globs vss-extension.json

      - name:  Create Release
        uses: actions/create-release@v1
        id: create_release
        with:
          release_name: CheckmarxASTBeta-${{ env.RELEASE_VERSION }}
          tag_name: ${{ env.RELEASE_VERSION }}
          body: ${{steps.github_release.outputs.changelog}}
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: upload artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./${{ env.PUBLISHER }}.${{ env.EXTENSION_ID }}-${{ env.RELEASE_VERSION }}.vsix
          asset_name: ${{ env.PUBLISHER }}.${{ env.EXTENSION_ID }}-${{ env.RELEASE_VERSION }}.vsix
          asset_content_type: application/zip

      - name: Release to marketplance
        run: tfx extension publish --vsix *.vsix --token ${{ secrets.AZURETOKEN }}
